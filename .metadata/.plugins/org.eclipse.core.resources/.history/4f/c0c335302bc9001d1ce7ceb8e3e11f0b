package controllers;

import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.control.TextField;
import sqlData.Product;

public class InventoryUpdateDialogController implements Initializable {
    
    @FXML private Spinner<Integer> idSpinner;
    @FXML private TextField nameField;
    @FXML private TextField priceField;
    @FXML private Spinner<Integer> stockLevelSpinner;
    @FXML private Button okButton;
    
    private Product product;
    
    public void setProduct(Product product) {
        this.product = product;
        if(product !=null)
        setIdSpinnerValue(product.getId());
        setNameFieldValue(product.getName());
        setPriceFieldValue(product.getPrice());
        setStockLevelSpinnerValue(product.getStockLevel());
    }
    
    public void setIdSpinnerValue(int id) {
        idSpinner.getValueFactory().setValue(id);
    }
    
    public void setNameFieldValue(String name) {
        nameField.setText(name);
    }
    
    public void setPriceFieldValue(double price) {
        priceField.setText(Double.toString(price));
    }
    
    public void setStockLevelSpinnerValue(int stockLevel) {
    	stockLevelSpinner.getValueFactory().setValue(stockLevel);
    }
    
    public int getIdSpinnerValue() {
        return idSpinner.getValue();
    }
    
    public String getNameFieldValue() {
        return nameField.getText();
    }
    
    public double getPriceFieldValue() {
        return Double.parseDouble(priceField.getText());
    }
    
    public int getStockLevelSpinnerValue() {
        return stockLevelSpinner.getValue();
    }

   
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        // Set the initial values of the text fields and spinners
        idSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(1, Integer.MAX_VALUE, product.getId()));
        nameField.setText(product.getName());
        priceField.setText(Double.toString(product.getPrice()));
        stockLevelSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(0, Integer.MAX_VALUE, product.getStockLevel()));
    }


}
